openapi: 3.0.0
info:
  title: Ray API
  description: API built to interact with the data layer needed for Ray's services
  version: 0.0.1
tags:
  - name: current
    description: Implemeneted
  - name: future
    description: To be implemented
servers:
  - url: http://192.168.0.12:8000
    description: Server when running on dell inspiron
  - url: http://192.168.0.38:8000
    description: Server when running on macbook 

paths:
  # ---- ECHO ----
  /echo/hello:
    get:
      tags:
      - future
      summary: 'Check if system is online'
      description: 'Idempotent request meant to check if system is online'
      responses:
        '200':
          description: 'Successful call to system'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'
              example: {
                statusCode: 200,
                type: "string",
                results: ["Hello world 2"]
              }
              
  /echo/time:
    get:
      tags:
      - future
      summary: 'Check the current system time'
      description: 'Request to provide information about time on the system'
      responses:
        '200':
          description: 'System time succeeded'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'
              example: {
                statusCode: 200,
                type: "DateTime",
                results: ["12:34:1234 MST"]
              }
      
  # ---- CLOTHING ----
  /clothing/item/{item_id}:
    get:
      tags: 
      - future
      parameters: 
      - in: path
        name: item_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: 'Success: ClothingItem Response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'
              example:
                statusCode: 200
                type: 'ClothingItem'
                results: 
                - id: 1
                  name: 'Life is good'
                  type: 3

  # # ---- FOOD ----
  /food/groceries:
    get:
      tags: 
      - future
      responses:
        '200':
          description: Groceries

  /food/recipes:
    get:
      tags:
      - future
      responses:
        '200':
          description: Recipes
  

  # ---- TODO ----
  /todo/calendar:
    get:
      tags: 
      - future
      responses:
        '200':
          description: Calendar info

  /todo/reminders:
    get:
      tags:
      - future
      responses:
        '200':
          description: Reminders
components:
  schemas:
    StandardResponse:
      type: object
      properties:
        statusCode:
          type: integer
        results:
          type: array
          items:
            type: object
        type:
          type: string
      required: 
        - statusCode
          results
          type
    ClothingItem:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        type:
          type: string
      required: 
        - id
          name
          type